# -*- coding: utf-8 -*-
"""3-lista.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1okqOLReLbFYQpz9P99m7vhpNbaRbyykn
"""

# 1. Faça um programa que peça uma nota, entre zero e dez. Mostre uma mensagemcaso o valor seja inválido e continue pedindo até que o usuário informe um valor válido.

while True:
    nota = float(input("Digite uma nota entre zero e dez: "))
    if 0 <= nota <= 10:
        print("Nota válida:", nota)
        break
    else:
        print("Valor inválido. Por favor, digite uma nota entre zero e dez.")

# 2. Faça um programa que verifique e mostre os números entre 1.000 e 2.000(inclusive) que, quando divididos por 11 produzam resto igual a 2.

# Verificar e mostrar números entre 1000 e 2000 que produzem resto 2 ao serem divididos por 11
for numero in range(1000, 2001):
    if numero % 11 == 2:
        print(numero)

# 3. Faça um programa que leia 5 números e informe a soma e a média dos números.

# Solicita ao usuário para inserir 5 números
num1 = float(input("Digite o primeiro número: "))
num2 = float(input("Digite o segundo número: "))
num3 = float(input("Digite o terceiro número: "))
num4 = float(input("Digite o quarto número: "))
num5 = float(input("Digite o quinto número: "))

# Calcula a soma dos números
soma = num1 + num2 + num3 + num4 + num5

# Calcula a média dos números
media = soma / 5

# Exibe a soma e a média
print("A soma dos números é:", soma)
print("A média dos números é:", media)

# 4. Faça um programa que receba um número e usando laços de repetição calcule emostre a tabuada desse número.

# Recebe o número do usuário
numero = int(input("Digite um número: "))

# Calcula e mostra a tabuada usando um laço de repetição
print(f"Tabuada do {numero}:")
for i in range(1, 11):
    print(f"{numero} x {i} = {numero * i}")

# 5. Faça um programa que mostre as tabuadas dos números de 1 a 10 usando laços derepetição.

# Mostrar as tabuadas dos números de 1 a 10
for i in range(1, 11):  # Para cada número de 1 a 10
    print(f"Tabuada do {i}:")
    for j in range(1, 11):  # Multiplicar pelo números de 1 a 10
        print(f"{i} x {j} = {i*j}")
    print()  # Adicionar uma linha em branco entre as tabuadas

# 6. Faça um programa que imprima na tela os números de 1 a 20, um abaixo do outro.Depois modifique o programa para que ele mostre os números um ao lado do outro.

# Imprimir os números de 1 a 20 abaixo um do outro
print("Números de 1 a 20 abaixo um do outro:")
for i in range(1, 21):
    print(i)

# Imprimir os números de 1 a 20 lado a lado
print("\nNúmeros de 1 a 20 lado a lado:")
for i in range(1, 21):
    print(i, end=" ")

# 7. Faça um programa que imprima na tela apenas os números ímpares entre 1 e 50.

# Imprime os números ímpares de 1 a 50
for num in range(1, 51, 2):
    print(num)

# 8. Numa eleição existem três candidatos. Faça um programa que peça o número totalde eleitores. Peça para cada eleitor votar e ao final mostrar o número de votos de cada candidato.

def contar_votos():
    num_eleitores = int(input("Digite o número total de eleitores: "))

    candidato1_votos = 0
    candidato2_votos = 0
    candidato3_votos = 0

    for i in range(num_eleitores):
        print(f"Eleitor {i+1}:")
        voto = int(input("Digite o número do candidato (1, 2 ou 3): "))

        if voto == 1:
            candidato1_votos += 1
        elif voto == 2:
            candidato2_votos += 1
        elif voto == 3:
            candidato3_votos += 1
        else:
            print("Voto inválido. Por favor, vote novamente.")

    print("\nResultado da eleição:")
    print(f"Candidato 1: {candidato1_votos} votos")
    print(f"Candidato 2: {candidato2_votos} votos")
    print(f"Candidato 3: {candidato3_votos} votos")

contar_votos()

# 9. Faça um programa que receba dois números inteiros e gere os números inteiros que estão no intervalo compreendido por eles.

def gerar_numeros_no_intervalo(num1, num2):
    if num1 < num2:
        for i in range(num1 + 1, num2):
            print(i, end=' ')
    else:
        for i in range(num2 + 1, num1):
            print(i, end=' ')

num1 = int(input("Digite o primeiro número inteiro: "))
num2 = int(input("Digite o segundo número inteiro: "))

print("Números no intervalo:")
gerar_numeros_no_intervalo(num1, num2)

# 10. Uma loja deseja cadastrar 5 clientes e verificar se o faturamento da loja foi superiora loja B (faturamento = 54000). Se o faturamento atingir esse valor mostre na telauma mensagem contendo em quanto foi superado o faturamento.

# Definindo o faturamento da loja B
faturamento_loja_b = 54000

# Lista para armazenar os faturamentos dos clientes
faturamentos_clientes = []

# Loop para cada cliente
for i in range(5):
    # Solicitar o faturamento do cliente atual
    faturamento_cliente = float(input(f"Digite o faturamento do cliente {i+1}: "))
    faturamentos_clientes.append(faturamento_cliente)

# Calculando o faturamento total da loja
faturamento_total = sum(faturamentos_clientes)

# Verificando se o faturamento da loja foi superior à loja B
if faturamento_total > faturamento_loja_b:
    diferenca = faturamento_total - faturamento_loja_b
    print(f"O faturamento da loja foi superior à loja B em R${diferenca:.2f}.")
else:
    print("O faturamento da loja não foi superior à loja B.")

# 11. Faça um programa que peça 10 números inteiros, calcule e mostre a quantidade denúmeros pares e a quantidade de números impares.

numeros_pares = 0
numeros_impares = 0

for i in range(10):
    numero = int(input("Digite um número inteiro: "))
    if numero % 2 == 0:
        numeros_pares += 1
    else:
        numeros_impares += 1

print("Quantidade de números pares:", numeros_pares)
print("Quantidade de números ímpares:", numeros_impares)

# 12. Um funcionário de uma empresa recebe aumento salarial anualmente: Sabe-se que: Esse funcionário foi contratado em 1995, com salário inicial de R$ 1.000,00; Em 1996 recebeu aumento de 1,5% sobre seu salário inicial; A partir de 1997 (inclusive), os aumentos salariais sempre correspondem aodobro do percentual do ano anterior.Faça um programa que determine o salário atual desse funcionário. Após concluir isto,altere o programa permitindo que o usuário digite o salário inicial do funcionário.

# Salário inicial em 1995
salario_inicial = 1000.00

# Percentual de aumento inicial em 1996
percentual_aumento = 1.5 / 100

# Loop de 1997 até 2024 (inclusive)
for ano in range(1997, 2025):
    # Aumento salarial
    aumento = percentual_aumento * salario_inicial
    # Novo salário
    salario_inicial += 2 * aumento

# Exibindo o salário atual
print(f"O salário atual do funcionário em 2024 é de R$ {salario_inicial:.2f}")

# Solicitando que o usuário digite o salário inicial
salario_inicial = float(input("Digite o salário inicial do funcionário: "))

# Percentual de aumento inicial em 1996
percentual_aumento = 1.5 / 100

# Loop de 1997 até 2024 (inclusive)
for ano in range(1997, 2025):
    # Aumento salarial
    aumento = percentual_aumento * salario_inicial
    # Novo salário
    salario_inicial += 2 * aumento

# Exibindo o salário atual
print(f"O salário atual do funcionário em 2024 é de R$ {salario_inicial:.2f}")

# 13. Faça um programa que peça uma nota, entre zero e dez. Mostre uma mensagemcaso o valor seja inválido e continue pedindo até que o usuário informe um valorválido.

while True:
    nota = float(input("Digite uma nota entre zero e dez: "))
    if 0 <= nota <= 10:
        print("Nota válida:", nota)
        break
    else:
        print("Valor inválido. Por favor, digite uma nota entre zero e dez.")

# 14. Uma loja tem tem uma política de descontos de acordo com o valor da compra docliente. Os descontos começam acima dos R$500. A cada 100 reais acima dosR$500,00 o cliente ganha 1% de desconto cumulativo até 25%. Por exemplo: R$500 = 1% || R$600,00 = 2% ... etc... Faça um programa que exiba essa tabela de descontos no seguinte formato: Valordacompra – porcentagem de desconto – valor final

def calcular_desconto(valor_compra):
    if valor_compra <= 500:
        return 0
    elif valor_compra > 500 and valor_compra <= 750:
        return (valor_compra - 500) // 100
    else:
        return min(5, (valor_compra - 500) // 100)

def exibir_tabela_descontos():
    print("Valor da compra - Porcentagem de desconto - Valor final")
    for valor_compra in range(500, 2001, 50):
        desconto_percentual = calcular_desconto(valor_compra)
        valor_final = valor_compra * (1 - desconto_percentual / 100)
        print(f"R${valor_compra:.2f} - {desconto_percentual}% - R${valor_final:.2f}")

exibir_tabela_descontos()

# 15. Faça um programa que receba a idade de 15 pessoas e que calcule e mostrea) A quantidade de pessoas em cada faixa etária;b) A percentagem de pessoas na primeira e na última faixa etária, com relação aototal de pessoas: Até 15 anos De 16 a 30 anos De 31 a 45 anos De 46 a 60 anos Acima de 61 anos

# Inicializando contadores para cada faixa etária
faixa_ate_15 = 0
faixa_16_30 = 0
faixa_31_45 = 0
faixa_46_60 = 0
faixa_acima_61 = 0

# Recebendo a idade de 15 pessoas
for i in range(15):
    idade = int(input(f"Digite a idade da {i+1}ª pessoa: "))

    # Incrementando o contador da faixa etária apropriada
    if idade <= 15:
        faixa_ate_15 += 1
    elif idade <= 30:
        faixa_16_30 += 1
    elif idade <= 45:
        faixa_31_45 += 1
    elif idade <= 60:
        faixa_46_60 += 1
    else:
        faixa_acima_61 += 1

# Calculando a porcentagem de pessoas na primeira e última faixa etária
total_pessoas = faixa_ate_15 + faixa_16_30 + faixa_31_45 + faixa_46_60 + faixa_acima_61
porcentagem_primeira_faixa = (faixa_ate_15 / total_pessoas) * 100
porcentagem_ultima_faixa = (faixa_acima_61 / total_pessoas) * 100

# Mostrando resultados
print("\nQuantidade de pessoas em cada faixa etária:")
print(f"Até 15 anos: {faixa_ate_15}")
print(f"De 16 a 30 anos: {faixa_16_30}")
print(f"De 31 a 45 anos: {faixa_31_45}")
print(f"De 46 a 60 anos: {faixa_46_60}")
print(f"Acima de 61 anos: {faixa_acima_61}")

print("\nPercentagem de pessoas na primeira e última faixa etária:")
print(f"Percentagem na primeira faixa etária: {porcentagem_primeira_faixa:.2f}%")
print(f"Percentagem na última faixa etária: {porcentagem_ultima_faixa:.2f}%")

# 16. Faça um programa que peça dois números, base e expoente, calcule e mostre oprimeiro número elevado ao segundo número. Não utilize a função de potência da linguagem.

base = float(input("Digite o número base: "))
expoente = int(input("Digite o expoente: "))

resultado = 1

for _ in range(expoente):
    resultado *= base

print("O resultado de", base, "elevado a", expoente, "é:", resultado)

# 17. Faça um programa que mostre todos os primos entre 1 e N sendo N um númerointeiro fornecido pelo usuário. O programa deverá mostrar também o número dedivisões que ele executou para encontrar os números primos. Serão avaliados ofuncionamento, o estilo e o número de testes (divisões) executados.

def is_prime(number):
    if number <= 1:
        return False
    if number <= 3:
        return True
    if number % 2 == 0 or number % 3 == 0:
        return False
    i = 5
    while i * i <= number:
        if number % i == 0 or number % (i + 2) == 0:
            return False
        i += 6
    return True

def prime_numbers_up_to_n(n):
    prime_numbers = []
    divisions_count = 0
    for num in range(2, n + 1):
        if is_prime(num):
            prime_numbers.append(num)
        divisions_count += 1
    return prime_numbers, divisions_count

def main():
    n = int(input("Digite um número inteiro positivo para encontrar os números primos até ele: "))
    prime_nums, divisions = prime_numbers_up_to_n(n)
    print("Números primos até", n, "são:", prime_nums)
    print("Número total de divisões executadas:", divisions)

if __name__ == "__main__":
    main()